# README #

Ciceron server code

### What is this repository for? ###

* Ciceron server code written by python and Flask
* Closed beta

### How to set up? ###
* Prerequisites
  - python-virtualenv
  - libssl-dev
  - libffi-dev
  - redis-server
  - libxml2-dev
  - libxslt1-dev
  - python-dev
  - nodejs nodejs-dev
  - postgresql postgresql-contrib (sudo -u postgres psql postgres -> \password [pasword])
  - libpq-dev

* Package dependency (pip install)
  - Flask
  - requests
  - paypalrestsdk
  - flask-cors
  - flask-redis
  - flask-session
  - Flask-Pushjack
  - Flask-Cache
  - pip install --upgrade --ignore-installed slate==0.3 pdfminer==20110515
  - python-docx
  - lxml
  - Celery
  - alipay
  - psycopg2
  - iamport-rest-client
  - pip install --upgrade google-api-python-client
  - nltk -> import nltk; nltk.download()
  - google-api-python-client
  - microsofttranslator
  - yandex.translate

* Summary of set up
 1) Env
  - apt-get install git
  - apt-get install python-virtualenv
  - pip install virtualenv
  - virtualenv venv
  - apt-get install libssl-dev libffi-dev
  - apt-get install libxml2-dev libxslt1-dev python-dev

  - For activate virtual env: execute shell '. venv/bin/activate'
      # DO NOT FORGET DOT!!! DOT MEANS current folder in GNU/UNIX
  - Execute shell 'pip install Flask'
  - After then, you don't have to execute 'pip install Flask' every time when you execute 'git fetch; git rebase'.
  - In virtual env, execute 'python application.py' and you may use server as localhost:5000

* Database configuration
  - Sqlite3
  - File based DB
  - 'ciceron.db' is the DB file
  - So, you don't have to import anything.
* How to run tests
  - In virtual env, execute 'python run_test.py'

